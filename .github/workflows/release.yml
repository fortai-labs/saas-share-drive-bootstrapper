name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: "1.85.0"
  BINARY_NAME: "aidir"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: aidir
            asset_name: aidir-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: aidir
            asset_name: aidir-macos-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: aidir.exe
            asset_name: aidir-windows-amd64
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.target }}
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.target }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-
            ${{ runner.os }}-cargo-
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Strip binary (Unix)
        if: matrix.os != 'windows-latest'
        run: strip "target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}"
      - name: Create archive
        shell: bash
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp "target/${{ matrix.target }}/release/${{ matrix.artifact_name }}" "dist/${{ matrix.asset_name }}.exe"
            cd dist
            7z a "${{ matrix.asset_name }}.zip" "${{ matrix.asset_name }}.exe"
            echo "ASSET=dist/${{ matrix.asset_name }}.zip" >> $GITHUB_ENV
          else
            cp "target/${{ matrix.target }}/release/${{ matrix.artifact_name }}" "dist/${{ matrix.asset_name }}"
            cd dist
            tar -czf "${{ matrix.asset_name }}.tar.gz" "${{ matrix.asset_name }}"
            echo "ASSET=dist/${{ matrix.asset_name }}.tar.gz" >> $GITHUB_ENV
          fi
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Publish to Crates.io
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
